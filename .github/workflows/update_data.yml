name: Update Scores

on:
  schedule:
    - cron: '*/1 * * * *'  # Her dakikada bir çalıştır
  push:
    branches:
      - main

jobs:
  update_scores:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install selenium requests schedule

    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Get Chrome version
      id: chrome-version
      run: |
        google-chrome --version
        google-chrome --version | grep -oP '\d+\.\d+\.\d+' > chrome_version.txt
        echo "Chrome version: $(cat chrome_version.txt)"

    - name: Remove existing ChromeDriver
      run: |
        sudo rm -f /usr/local/bin/chromedriver
        sudo rm -f /usr/bin/chromedriver
        sudo rm -f /usr/local/share/chromedriver

    - name: Download ChromeDriver
      run: |
        CHROME_VERSION=$(cat chrome_version.txt)
        MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d '.' -f 1)
        if [ "$MAJOR_VERSION" == "126" ]; then
          CHROMEDRIVER_VERSION="126.0.6478.126"
        else
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$MAJOR_VERSION")
          if [ -z "$CHROMEDRIVER_VERSION" ]; then CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE"); fi
        fi
        wget -N "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip" -P ~/
        unzip -o ~/chromedriver_linux64.zip -d ~/
        sudo mv -f ~/chromedriver /usr/local/share/chromedriver
        sudo ln -s /usr/local/share/chromedriver /usr/local/bin/chromedriver
        sudo ln -s /usr/local/share/chromedriver /usr/bin/chromedriver

    - name: List files for debugging
      run: ls -R

    - name: Run Python script
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: python ./goalmatches.py

    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        git commit -m 'Update scores'
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
